<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:p="http://www.springframework.org/schema/p"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


   <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
         destroy-method="close"
         p:driverClassName="${db.driver}"
         p:url="${db.url}"
         p:username="${db.username}"
         p:password="${db.password}"
   />
   

   <bean id="mybatisConfig" class="org.apache.ibatis.session.Configuration"
         p:jdbcTypeForNull="NULL"
   />
   
         
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
         p:dataSource-ref="dataSource"
         p:configuration-ref="mybatisConfig"
         p:typeAliasesPackage="com.kh.mvc.*.model.vo"
         p:mapperLocations="classpath:mappers/**/*.xml"
   />
   
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
         c:sqlSessionFactory-ref="sqlSessionFactory"
   />
   
   <bean  id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
   			p:basePackage="com.kh.mvc.*.model.mapper"
   />
   
   <!-- 
   		트랜잭션 처리 방법
   		 
   		1. 트랜잭션 매니저를 빈으로 등록하기 (mybatis-context.xml)
   		2. @Transactional을 사용해서 트랜잭션 처리가 될 수 있도록
   			<tx:annotation-driven /> 요소를 설정 파일(servlet-context.xml)에 등록한다.
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" 
    		p:dataSource-ref="dataSource"
    />
   
   
   
   
   
   
   
</beans>